env: #dev|prod default to dev
host: #default to localhost
port: #default to 5050
secret: #required
keyword: #default to empty
username: #default to empty
log: #default to ./logs/
max_worker: #default to 1. worker to do git pull.
service:
  - repo:
      name: #required. the name of the repo should be match as in the url '/hook/{repo}'
      path: #required. where git pull should be executed
      user: #optional. the user that own this repo used for creating `id`. default to 'user'
      branch: #optional. the branch that would be this service listening to. default to 'master
      opt_cmd: #optional. shell command that get executed after git pull
  - repo:
      path: #required. where git pull should be executed
      name: #required. the name of the repo should be match as in the url '/hook/{repo}'
      user: #optional. the user that own this repo used for creating `id`. default to 'user'
      branch: #optional. the branch that would be this service listening to. default to 'master
      opt_cmd: #optional. shell command that get executed after git pull
dockers:
  - docker:
      user: #required. the user that own the repo
      pass: #required. the password for this user
      repo: #required. the repo which would be listened
      tag: #optional. the tag that associated with this repo. default to 'latest'
      args: #optional. arguments that would be added when running docker command 'docker run ... '. example: -p 4000:4000
  - docker:
      user: #required. the user that own the repo
      pass: #required. the password for this user
      repo: #required. the repo which would be listened
      tag: #optional. the tag that associated with this repo. default to 'latest'
      args: #optional. arguments that would be added when running docker command 'docker run ... '. example: -p 5000:6000
